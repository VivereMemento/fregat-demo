'use strict';

(function () {
	'use strict';

	svg4everybody();

	var t;
	var btnUp = getElement('.btn-up');
	btnUp.addEventListener('click', up);
	function up() {

		var top = Math.max(document.body.scrollTop, document.documentElement.scrollTop);
		console.log(top);

		if (top > 0) {
			window.scrollBy(0, -50);
			t = setTimeout(up, 2);
		} else {
			clearTimeout(t);
		};

		return false;
	}
})();

function getElement(elem) {
	return document.querySelector(elem);
}

function getAllElements(elem) {
	return document.querySelectorAll(elem);
}
'use strict';

var addCoutnInput = function () {
	var init = function init() {
		if (wrapInput.length) {
			_setUpListners();
		}
	};
	var _setUpListners = function _setUpListners() {
		document.addEventListener('click', addCount);
	};

	var basketInput = document.querySelectorAll('.params-js');
	var countInput = document.querySelectorAll('.js-add-count');
	var wrapInput = basketInput.length === 0 ? countInput : basketInput;
	var basketTotalCount = getElement('.basket__total-count');

	function addCount(e) {
		Array.from(wrapInput).forEach(function (item) {
			var input = item.querySelector('input'),
			    count = parseFloat(input.value),
			    inputBtnUp = item.querySelector('.add-input__btn_up'),
			    inputBtnDown = item.querySelector('.add-input__btn_down'),
			    startPrice = void 0,
			    totalPrice = void 0,
			    startPriceValue = void 0,
			    totalPriceValue = void 0,
			    basketTotalCountValue = void 0,
			    basketDeleteBtn = void 0;

			if (item.classList.contains('series__table-product-params')) {
				startPrice = item.querySelector('.price-js > span');
				totalPrice = item.querySelector('.total-price-js > span');
				startPriceValue = parseFloat(startPrice.innerText);
				totalPriceValue = parseFloat(totalPrice.innerText);
				// basketTotalCountValue = parseFloat(basketTotalCount.innerText);
			}

			if (e.target === basketDeleteBtn) {
				setTimeout(function () {
					var inputs = document.getElementsByName('count');
					var count = 0;

					Array.from(inputs).forEach(function (input) {
						count += parseFloat(input.value);
					});
					basketTotalCount.innerText = count;
				});
			}

			if (isNaN(input.value) || input.value === '') {
				input.value = 1;
				// basketTotalCount.innerText = ++basketTotalCountValue;
				return;
			}

			if (e.target === inputBtnUp) {
				count++;
				input.value = count;

				if (totalPrice) {
					// basketTotalCount.innerText = ++basketTotalCountValue;
					totalPrice.innerText = (totalPriceValue + startPriceValue).toFixed(2);
				}
			}

			if (e.target === inputBtnDown) {
				if (count === 1) {
					return;
				}
				count--;
				input.value = count;
				if (totalPrice) {
					// basketTotalCount.innerText = --basketTotalCountValue;
					totalPrice.innerText = (totalPriceValue - startPriceValue).toFixed(2);
				}
			}

			if (totalPrice) {
				input.addEventListener('input', function () {
					var inputs = document.getElementsByName('count');
					var inputValue = parseFloat(input.value);
					var count = 0;

					Array.from(inputs).forEach(function (input) {
						if (isNaN(input.value) || input.value === '') {
							count += 0;
							inputValue = 1;
							return;
						};
						count += parseFloat(input.value);
					});
					totalPrice.innerText = (startPriceValue * inputValue).toFixed(2);
					basketTotalCount.innerText = count;
				});
			}
		});
	}

	return {
		init: init
	};
}();

addCoutnInput.init();
'use strict';

var menu = function () {

	var init = function init() {
		_setUpListners();
	};
	var _setUpListners = function _setUpListners() {
		window.addEventListener('scroll', checkSlide);
		if (window.innerWidth <= 480) {
			window.removeEventListener('scroll', checkSlide);
		}
		menuBtn.addEventListener('click', openMenu);
	};

	var menu = getElement('.menu__inner');
	var menuHeight = menu.clientHeight;
	var menuBtn = getElement('.menu__title');
	var footer = getElement('footer');
	var menuOfSetTop = menu.offsetTop;

	function checkSlide() {

		var footerOffSetTop = footer.offsetTop;

		if (window.scrollY >= menuOfSetTop) {
			menu.classList.add('sticked');
		} else {
			menu.classList.remove('sticked');
		}

		if (window.scrollY + menu.clientHeight >= footerOffSetTop + 15) {
			menu.classList.add('unsticked');
		} else {
			menu.classList.remove('unsticked');
		};
	}

	function openMenu() {
		var menuList = menu.querySelector('.menu__list');
		var menuListHeight = menuList.clientHeight;

		if (menu.clientHeight < menuListHeight) {
			menu.style.height = menuHeight + menuListHeight + 'px';
		} else {
			menu.style.height = menuHeight + 'px';
		}
	}

	return {
		init: init
	};
}();

menu.init();
'use strict';

var mobNav = function () {
    var init = function init() {
        _setUpListeners();
    };

    var _setUpListeners = function _setUpListeners() {
        navBtn.addEventListener('click', _toggleNav);
        navWrap.addEventListener('click', _action);
    };

    var partOne = document.querySelector('.header__part-one');
    var navWrap = document.querySelector('.header__part-two');
    var partThree = document.querySelector('.header__part-three');
    var navBtn = document.querySelector('.menu-trigger');
    var navLinks = document.querySelectorAll(".nav__link_arrow");
    var loginBtn = document.querySelector('.header__login-btn');
    var netbookMenu = document.querySelector('.netbook-menu-wrap');

    function _toggleNav() {
        var stylesNavWrap = getComputedStyle(navWrap);
        var stylesLoginBtn = getComputedStyle(loginBtn);
        var posOfNavWrap = parseFloat(stylesNavWrap.left);
        var posOfLoginBtn = parseFloat(stylesLoginBtn.right);
        var widthOfLoginBtn = loginBtn.offsetWidth;

        posOfNavWrap === 0 ? navWrap.style.left = -100 + '%' : navWrap.style.left = 0;
        posOfLoginBtn === 0 ? loginBtn.style.right = widthOfLoginBtn + 'px' : loginBtn.style.right = 0;
        navBtn.classList.toggle('active');
        partOne.classList.toggle('passive');
        partThree.classList.toggle('active');

        if (window.outerWidth > 580) {
            netbookMenu.classList.toggle('active');
        }
    }

    function _action(e) {

        if (e.target.nextElementSibling.style.maxHeight) {
            e.target.nextElementSibling.style.maxHeight = null;
            e.target.classList.remove('active');
            return;
        }
        navLinks.forEach(function (link) {
            link.classList.remove('active');
            link.nextElementSibling.style.maxHeight = null;

            if (e.target === link) {
                var panel = e.target.nextElementSibling;
                panel.style.maxHeight = panel.scrollHeight + "px";
                link.classList.add('active');
            }
        });
    }

    return {
        init: init
    };
}();
mobNav.init();
'use strict';

var owlSlider = function () {

    var init = function init() {
        _setUpListeners();
    };

    var _setUpListeners = function _setUpListeners() {
        window.addEventListener('load', function () {
            if (window.outerWidth <= 480) {
                _owlInitialization();
            }

            if (window.outerWidth <= 780) {
                _initializeSlider();
            }
        });

        window.addEventListener('resize', function () {
            window.outerWidth > 480 ? $('.products__list').trigger('destroy.owl.carousel') : _owlInitialization();
            window.outerWidth > 780 ? $('.slider__list').trigger('destroy.owl.carousel') : _initializeSlider();
        });
    };

    function _initializeSlider() {
        $('.slider__list').addClass('owl-carousel owl-theme');
        $('.slider__list').owlCarousel({
            loop: true,
            nav: false,
            dots: true,
            items: 1,
            autoplay: true,
            autoplayTimeout: 3000,
            autoplayHoverPause: true,
            responsive: {
                0: {
                    items: 1
                }
            }
        });
    }

    function _owlInitialization() {
        $('.products__list').addClass('owl-carousel owl-theme');
        $('.products__list').owlCarousel({
            loop: true,
            nav: true,
            dots: true,
            items: 1,
            responsive: {
                0: {
                    items: 1
                }
            }
        });
    }

    return {
        init: init
    };
}();
owlSlider.init();
'use strict';

var search = function () {

	var init = function init() {
		_setUpListners();
	};
	var _setUpListners = function _setUpListners() {
		searchBnt.addEventListener('click', toggleSearch);
	};

	var searchBnt = getElement('#search-btn');
	var searchBlock = getElement('.search');
	var searchWrap = getElement('.search__wrap');

	function toggleSearch() {

		if (searchBlock.style.display === 'block') {
			var transitionEnd = function transitionEnd() {
				searchBlock.style.display = 'none';
				searchWrap.removeEventListener('transitionend', transitionEnd);
			};

			searchWrap.addEventListener('transitionend', transitionEnd);
		} else {
			searchBlock.style.display = 'block';
		}

		setTimeout(function () {
			searchWrap.classList.toggle('opened');
		});
	}

	return {
		init: init
	};
}();

search.init();
'use strict';

var mySlideshow = function () {

	var slides = getAllElements('.slider__item');
	var dotsContainer = getElement('.dots');
	var dots = getAllElements('.dot');
	var slideIndex = 0;

	var init = function init() {
		if (window.innerWidth <= 780) {
			// _setUpListners();
		}
	};

	var _setUpListners = function _setUpListners() {
		dotsContainer.addEventListener('click', _currentSlide);
		_showSlides();
		setInterval(_showSlides, 5000); // Change image every 2 seconds
	};

	function _currentSlide(e) {
		var i = 0;

		dots.forEach(function (item, index) {
			if (e.target === item) {
				i = index;
			}
		});

		_showSlides(slideIndex = i);
	}

	function _showSlides() {

		slides.forEach(function (item) {
			item.classList.remove('fade');
			item.style.display = "none";
		});

		dots.forEach(function (item) {
			item.className = item.className.replace(" active fade", "");
		});

		slideIndex++;

		if (slideIndex > slides.length) {
			slideIndex = 1;
		};

		slides[slideIndex - 1].style.display = "flex";
		slides[slideIndex - 1].classList.add('fade');
		dots[slideIndex - 1].className += " active fade";
	}

	return {
		init: init
	};
}();

mySlideshow.init();
//# sourceMappingURL=data:application/json;base64,
